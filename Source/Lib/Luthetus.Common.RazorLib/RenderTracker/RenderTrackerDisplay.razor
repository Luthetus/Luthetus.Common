@using Fluxor.Blazor.Web.Components;
@inherits FluxorComponent

@{ var renderTrackerState = RenderTrackerStateWrap.Value; }

<div class="luth_render-tracker">

    <div>
        <span>
            _numberOfEntriesToShow:&nbsp;
        </span>

        <input type="number"
               @bind="_numberOfEntriesToShow" />
    </div>

    @foreach (var renderTrackerObject in renderTrackerState.Map.Values)
    {
        <div>
            <span @onclick="() => renderTrackerObject.ShowEntries = !renderTrackerObject.ShowEntries"
                  class="luth_te_type"
                  style="cursor: pointer;">
                @renderTrackerObject.DisplayName
            </span>

            <span class="luth_te_variable">
                RenderCount:&nbsp;@renderTrackerObject.RenderCount
            </span>

            @if (renderTrackerObject.ShowEntries)
            {
                var reversedRenderTrackerEntries = renderTrackerObject.RenderTrackerEntries.Reverse();
                <ol>
                    @foreach (var renderTrackerEntry in reversedRenderTrackerEntries.Take(_numberOfEntriesToShow))
                    {
                        var dateTimeKind = DateTimeKind.Utc;
                        var dateTime = new DateTime(renderTrackerEntry.Ticks, dateTimeKind);

                        <li>
                            <span class="luth_te_keyword">
                                @dateTime (@dateTimeKind)
                            </span>
                            -
                            <span class="luth_te_string-literal">
                                @renderTrackerEntry.Reason
                            </span>
                        </li>
                    }
                </ol>
            }
        </div>
    }
</div>